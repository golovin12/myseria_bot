version: '3.1'

services:
  balancer:
    image: nginx:1.25.3
    restart: always
    ports:
      - "8443:8443"
    volumes:
      - ./management/configurations/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./management/configurations/nginx_bot.conf:/etc/nginx/sites-enabled/nginx_bot.conf:ro
      - ./management/certs/public.pem:/etc/ssl/private/public.pem:ro
      - ./management/certs/private.key:/etc/ssl/private/private.key:ro
    networks:
      - network
    depends_on:
      - bot

  rabbitmq:
    image: rabbitmq:3.12.8-management
    command: rabbitmq-server
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./management/configurations/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./management/configurations/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    hostname: rabbitmq
    networks:
      - network
    expose:
      - 5672
    ports:
      - "15672:15672"

  redis:
    image: redis:alpine
    command: redis-server --save 20 1 --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: always
    volumes:
      - redis:/var/lib/redis
    networks:
      - network
    expose:
      - 6379

  bot:
    build: .
    command: sh -c "python -m run"
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
      ENV_NAME: DOCKER
    depends_on:
      - redis
      - rabbitmq
    networks:
      - network
    expose:
      - 8000

  worker:
      build: .
      command: sh -c "python -m management.run_dramatiq"
      restart: always
      environment:
        RABBITMQ_HOST: rabbitmq
        REDIS_HOST: redis
        ENV_NAME: DOCKER
      depends_on:
        - redis
        - rabbitmq
      networks:
        - network

volumes:
  redis:
  rabbitmq:

networks:
  network:
